function Application(model){	var processors = {};		function renderHeader(req, res, page)	{		var header = headertext			.replace(/\${title}/g, page.title)			.replace(/\${sitetitle}/g, model.title)			.replace(/\${menu}/g, menutext);					res.write(header);	}	function renderFooter(req, res, page)	{		res.write(footertext);	}	function definePage(page)	{		return function(req, res)		{			renderHeader(req, res, page);						if (page.content)				res.write(page.content);							renderFooter(req, res, page);			res.end();		}	}	function registerPage(app, page)	{		app.get(page.url, processors.pageFactory.create(model, page));	}	function registerPages(app, pages)	{			var npages = pages.length;				for (var k = 0; k < npages; k++)			registerPage(app, pages[k]);	}		this.register = function(app)	{		if (model.pages)			registerPages(app, model.pages);	}		this.use = function(name, processor)	{		if (processor.create)			processors[name + 'Factory'] = processor;		else			throw "Invalid processor";					return this;	}}exports.createApplication = function(model) { return new Application(model); }